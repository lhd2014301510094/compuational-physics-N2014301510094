import pylab as pl
import numpy as np
import math
class kepler_laws:
    def __init__(self, time_step=0.001, initial_x=1, initial_y=0, initial_r=1, beita=2.25, initial_vy=2.50*math.pi):
        self.dt=time_step
        self.x=[initial_x]
        self.y=[initial_y]
        self.vx=[0]
        self.vy=[initial_vy]
        self.r=[initial_r]
        self.bt=beita
    def run(self):
        for i in range(400000):
            self.r.append(np.sqrt(self.x[-1]**2+self.y[-1]**2))
            self.vx.append(self.vx[-1]-4*math.pi**2*self.x[-1]*self.dt/(self.r[-1]**(self.bt+1)))
            self.x.append(self.x[-1]+self.vx[-1]*self.dt)
            self.vy.append(self.vy[-1]-4*math.pi**2*self.y[-1]*self.dt/(self.r[-1]**(self.bt+1)))
            self.y.append(self.y[-1]+self.vy[-1]*self.dt)
    def show(self):
        font = {'family': 'serif','color':  'darkred','weight': 'normal','size': 16,}
        #pl.figure(figsize=(35,35))
        pl.plot(self.x, self.y)
        pl.title('Simulation of elliptical orbit')
        pl.xlabel('x(AU)')
        pl.ylabel('y(AU)')
        pl.scatter([0],[0],s=100,color='red')
        #pl.xlim(-1,1)
        #pl.ylim(-1,1)
        pl.text(self.x[60], self.y[160],'$beta$='+str(self.bt), fontdict = font)
        pl.show()
a=kepler_laws()
a.run()
a.show()
